<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yarhl.Media</name>
    </assembly>
    <members>
        <member name="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding">
            <summary>
            Provides an encoding for encode and decode symbols out of range of any encoding.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding"/> class.
            </summary>
            <param name="baseEncodingName">Base encoding name.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.#ctor(System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding"/> class.
            </summary>
            <param name="encoding">Base encoding.</param>
            <remarks>
            For correct usage, make sure that your encoding uses the
            <see cref="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallback"/> as the decoder fallback.
            </remarks>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.TokenStart">
            <summary>
            Gets the start of the token for invalid symbols.
            </summary>
            <value>The token start.</value>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.TokenEnd">
            <summary>
            Gets the end of the token for invalid symbols.
            </summary>
            <value>The token end.</value>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Gets the byte count.
            </summary>
            <returns>The byte count.</returns>
            <param name="chars">Chars to convert.</param>
            <param name="index">Index of the char array.</param>
            <param name="count">Count in the char array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets the char count.
            </summary>
            <returns>The char count.</returns>
            <param name="bytes">Bytes to convert.</param>
            <param name="index">Index of the byte array.</param>
            <param name="count">Count of the byte array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Gets the encoded bytes.
            </summary>
            <returns>The encoded bytes.</returns>
            <param name="chars">Chars to convert.</param>
            <param name="charIndex">Index in the char array.</param>
            <param name="charCount">Number of chars to convert.</param>
            <param name="bytes">Output byte array.</param>
            <param name="byteIndex">Indes in the byte array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Gets the decoded chars.
            </summary>
            <returns>The decoded chars.</returns>
            <param name="bytes">Encoded bytes.</param>
            <param name="byteIndex">Index in the encoded bytes.</param>
            <param name="byteCount">Number of bytes to decoded.</param>
            <param name="chars">Output char array.</param>
            <param name="charIndex">Index in the char array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Gets the max byte count.
            </summary>
            <returns>The max byte count.</returns>
            <param name="charCount">Char count.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Gets the max char count.
            </summary>
            <returns>The max char count.</returns>
            <param name="byteCount">Byte count.</param>
        </member>
        <member name="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallback">
            <summary>
            Provides an encoding fallback mechanism for symbols out of the range
            of an encoding.
            </summary>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallback.MaxCharCount">
            <summary>
            Gets the number of chars for the invalid symbols.
            </summary>
            <value>The max char count.</value>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallback.CreateFallbackBuffer">
            <summary>
            Creates the fallback buffer.
            </summary>
            <returns>The fallback buffer.</returns>
        </member>
        <member name="T:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer">
            <summary>
            Provides a substitute string for invalid symbols of an encoding.
            </summary>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer.Remaining">
            <summary>
            Gets the number of remaining chars in the replacement string.
            </summary>
            <value>The number of remaining chars.</value>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
            <summary>
            Creates the fallback for the specified buffer.
            </summary>
            <returns>Returns <c>true</c>.</returns>
            <param name="bytesUnknown">Unknown bytes to replace.</param>
            <param name="index">Index in the external replacement string.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer.GetNextChar">
            <summary>
            Gets the next char of the buffer.
            </summary>
            <returns>The next char.</returns>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer.MovePrevious">
            <summary>
            Moves to the previous position in the buffer.
            </summary>
            <returns>Returns <c>true</c> if it was able to move back.</returns>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EscapeOutRangeEncoding.EscapeOutRangeDecoderFallbackBuffer.Reset">
            <summary>
            Reset this instance.
            </summary>
        </member>
        <member name="T:Yarhl.Media.Text.Encodings.EucJpEncoding">
            <summary>
            EUC-JP encoding.
            Implemented standard from: https://encoding.spec.whatwg.org/.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Encodings.EucJpEncoding"/> class.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.#ctor(System.Text.DecoderFallback,System.Text.EncoderFallback)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Encodings.EucJpEncoding"/> class.
            </summary>
            <param name="decFallback">Decoder fallback.</param>
            <param name="encFallback">Encoder fallback.</param>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EucJpEncoding.DecoderFallback">
            <summary>
            Gets the decoder fallback.
            </summary>
            <value>The decoder fallback.</value>
        </member>
        <member name="P:Yarhl.Media.Text.Encodings.EucJpEncoding.EncoderFallback">
            <summary>
            Gets the encoder fallback.
            </summary>
            <value>The encoder fallback.</value>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Gets the byte count.
            </summary>
            <returns>The byte count.</returns>
            <param name="chars">Chars to convert.</param>
            <param name="index">Index of the char array.</param>
            <param name="count">Count in the char array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Gets the encoded bytes.
            </summary>
            <returns>The encoded bytes.</returns>
            <param name="chars">Chars to convert.</param>
            <param name="charIndex">Index in the char array.</param>
            <param name="charCount">Number of chars to convert.</param>
            <param name="bytes">Output byte array.</param>
            <param name="byteIndex">Indes in the byte array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Gets the char count.
            </summary>
            <returns>The char count.</returns>
            <param name="bytes">Bytes to convert.</param>
            <param name="index">Index of the byte array.</param>
            <param name="count">Count of the byte array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Gets the decoded chars.
            </summary>
            <returns>The decoded chars.</returns>
            <param name="bytes">Encoded bytes.</param>
            <param name="byteIndex">Index in the encoded bytes.</param>
            <param name="byteCount">Number of bytes to decoded.</param>
            <param name="chars">Output char array.</param>
            <param name="charIndex">Index in the char array.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetMaxByteCount(System.Int32)">
            <summary>
            Gets the max byte count.
            </summary>
            <returns>The max byte count.</returns>
            <param name="charCount">Char count.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.GetMaxCharCount(System.Int32)">
            <summary>
            Gets the max char count.
            </summary>
            <returns>The max char count.</returns>
            <param name="byteCount">Byte count.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.EncodeText(System.String,System.Action{System.IO.Stream,System.Byte})">
            <summary>
            Internal text encoder.
            </summary>
            <param name="text">Text to encode.</param>
            <param name="encodedByte">Callback with the byte encoded.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.EncodeText(System.IO.Stream,System.Action{System.IO.Stream,System.Byte})">
            <summary>
            Internal text encoder.
            </summary>
            <param name="stream">Text to encode.</param>
            <param name="encodedByte">Callback with the byte encoded.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Encodings.EucJpEncoding.DecodeText(System.IO.Stream,System.Action{System.IO.Stream,System.String})">
            <summary>
            Internal text decoder.
            </summary>
            <param name="stream">Stream to decode.</param>
            <param name="decodedText">Callback with decoded text.</param>
        </member>
        <member name="T:Yarhl.Media.Text.Po">
            <summary>
            Portable Object format for translations.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Po.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Po"/> class.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Po.#ctor(Yarhl.Media.Text.PoHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Po"/> class.
            </summary>
            <param name="headerArg">PO header.</param>
        </member>
        <member name="P:Yarhl.Media.Text.Po.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>The header.</value>
        </member>
        <member name="P:Yarhl.Media.Text.Po.Entries">
            <summary>
            Gets the entries.
            </summary>
            <value>The entries.</value>
        </member>
        <member name="M:Yarhl.Media.Text.Po.Add(Yarhl.Media.Text.PoEntry)">
            <summary>
            Add the specified entry.
            </summary>
            <param name="item">Entry to add. The ID must be unique.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Po.Add(System.Collections.Generic.IEnumerable{Yarhl.Media.Text.PoEntry})">
            <summary>
            Add the specified entries.
            </summary>
            <param name="items">Entries to add.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Po.FindEntry(System.String,System.String)">
            <summary>
            Gets a <see cref="T:Yarhl.Media.Text.PoEntry"/> from the original text.
            </summary>
            <param name="original">Original text from the entry.</param>
            <param name="context">Context text from the entry.</param>
            <returns>The found entry or null if not found.</returns>
        </member>
        <member name="T:Yarhl.Media.Text.Po2Binary">
            <summary>
            Po to Binary converter.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Po2Binary.Convert(Yarhl.Media.Text.Po)">
            <summary>
            Convert the specified PO into a Binary stream.
            </summary>
            <returns>The converted stream.</returns>
            <param name="source">Source PO.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Po2Binary.Convert(Yarhl.FileFormat.BinaryFormat)">
            <summary>
            Convert the specified Binary stream into a PO object.
            </summary>
            <returns>The converted PO object.</returns>
            <param name="source">Source binary stream.</param>
        </member>
        <member name="T:Yarhl.Media.Text.PoEntry">
            <summary>
            Entry in PO formats. Represents a translation unit.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.PoEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.PoEntry"/> class.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.PoEntry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.PoEntry"/> class.
            </summary>
            <param name="original">Original text to translate.</param>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Original">
            <summary>
            Gets or sets the original content to translate.
            </summary>
            <remarks>
            Entris with the same original content will be merged.
            </remarks>
            <value>The original content.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Translated">
            <summary>
            Gets or sets the translated content.
            </summary>
            <value>The translated content.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Text">
            <summary>
            Gets the translated text if any, otherwise the original text.
            </summary>
            <returns>The final text.</returns>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <remarks>
            It's possible to have multiple entries with the same
            <see cref="P:Yarhl.Media.Text.PoEntry.Original"/> content if the context is different.
            </remarks>
            <value>The context.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.TranslatorComment">
            <summary>
            Gets or sets the translators' comments.
            </summary>
            <value>The translator comment.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.ExtractedComments">
            <summary>
            Gets or sets the programmers' comments.
            </summary>
            <value>The extracted comments.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Reference">
            <summary>
            Gets or sets the comments with reference to the origin of the content.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.Flags">
            <summary>
            Gets or sets the flags.
            </summary>
            <value>The flags.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.PreviousContext">
            <summary>
            Gets or sets the previous context.
            </summary>
            <value>The previous context.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoEntry.PreviousOriginal">
            <summary>
            Gets or sets the previous original content.
            </summary>
            <value>The previous original content.</value>
        </member>
        <member name="T:Yarhl.Media.Text.PoHeader">
            <summary>
            Header for PO translation format.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.PoHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.PoHeader"/> class.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.PoHeader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.PoHeader"/> class.
            </summary>
            <param name="id">Identifier of the project.</param>
            <param name="reporter">Address to report bugs.</param>
            <param name="lang">Translation language.</param>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.ContentType">
            <summary>
            Gets the type of the content and encoding.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.ContentTransferEncoding">
            <summary>
            Gets the content transfer encoding.
            </summary>
            <value>The content transfer encoding.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.MimeVersion">
            <summary>
            Gets the version of MIME.
            </summary>
            <value>The version of MIME.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.ProjectIdVersion">
            <summary>
            Gets or sets the project identifier version.
            </summary>
            <value>The project identifier version.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.ReportMsgidBugsTo">
            <summary>
            Gets or sets the address and name to report bugs in the string format.
            </summary>
            <value>The address to report bugs to.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
            <value>The creation date.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.RevisionDate">
            <summary>
            Gets or sets the revision date.
            </summary>
            <value>The revision date.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.LastTranslator">
            <summary>
            Gets or sets the last translator name.
            </summary>
            <value>The last translator name.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.LanguageTeam">
            <summary>
            Gets or sets the team translation name.
            </summary>
            <value>The team name.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.Language">
            <summary>
            Gets or sets the target language.
            </summary>
            <value>The target language.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.PluralForms">
            <summary>
            Gets or sets the plural forms.
            </summary>
            <value>The plural forms.</value>
        </member>
        <member name="P:Yarhl.Media.Text.PoHeader.Extensions">
            <summary>
            Gets a dictionary with custom header metadata.
            </summary>
            <value>The dictionary for the metadata.</value>
        </member>
        <member name="T:Yarhl.Media.Text.Replacer">
            <summary>
            Replaces substrings in a text from a map.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.Replacer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.Replacer"/> class.
            </summary>
        </member>
        <member name="P:Yarhl.Media.Text.Replacer.Map">
            <summary>
            Gets the map for the replacements.
            </summary>
            <returns>The map for the replacements.</returns>
        </member>
        <member name="M:Yarhl.Media.Text.Replacer.Add(System.String,System.String)">
            <summary>
            Add or replace an entry in the map.
            </summary>
            <param name="src">The source field for the entry.</param>
            <param name="dst">The destination field for the entry.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Replacer.Remove(System.String)">
            <summary>
            Remove an entry from the map.
            </summary>
            <param name="src">The original field from the entry.</param>
        </member>
        <member name="M:Yarhl.Media.Text.Replacer.Transform(System.String,System.Boolean)">
            <summary>
            Transform a text replacing the strings from the map.
            </summary>
            <param name="text">The text to transform.</param>
            <param name="originalText">
            True to replace strings from the Original field of the map with the
            Modified version. False to apply the reverse.
            </param>
            <remarks>
            When multiple original fields in the map have same start, the
            later map entry will have preference.
            </remarks>
            <returns>The transformed text.</returns>
        </member>
        <member name="T:Yarhl.Media.Text.ReplacerEntry">
            <summary>
            Entry of the map of replacements.
            </summary>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Yarhl.Media.Text.ReplacerEntry"/> struct.
            </summary>
            <param name="original">The original string to replace.</param>
            <param name="modified">The modified string.</param>
        </member>
        <member name="P:Yarhl.Media.Text.ReplacerEntry.Original">
            <summary>
            Gets the original string.
            </summary>
            <returns>Original string.</returns>
        </member>
        <member name="P:Yarhl.Media.Text.ReplacerEntry.Modified">
            <summary>
            Gets the modified string.
            </summary>
            <returns>Modified string.</returns>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.op_Equality(Yarhl.Media.Text.ReplacerEntry,Yarhl.Media.Text.ReplacerEntry)">
            <summary>
            Determines whether two object instances are equal.
            </summary>
            <param name="entry1">First entry to compare.</param>
            <param name="entry2">Second entry to compare.</param>
            <returns>
            true if the first object is equal to the second object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.op_Inequality(Yarhl.Media.Text.ReplacerEntry,Yarhl.Media.Text.ReplacerEntry)">
            <summary>
            Determines whether two object instances are different.
            </summary>
            <param name="entry1">First entry to compare.</param>
            <param name="entry2">Second entry to compare.</param>
            <returns>
            true if the first object is different to the second object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns> A hash code for the current object.</returns>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.Equals(System.Object)">
            <summary>
            Determines whether two object instances are equal.
            </summary>
            <param name="obj">
            The object to compare with the current object.
            </param>
            <returns>
            true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Yarhl.Media.Text.ReplacerEntry.Equals(Yarhl.Media.Text.ReplacerEntry)">
            <summary>
            Determines whether two object instances are equal.
            </summary>
            <param name="other">
            The instance to compare with the current instance.
            </param>
            <returns>
            true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="T:Yarhl.Media.Text.XmlExtension">
            <summary>
            Extension methods for XML.
            </summary>
        </member>
        <member name="P:Yarhl.Media.Text.XmlExtension.XmlSpacesPerLevel">
            <summary>
            Gets the default spaces per XML level.
            </summary>
            <value>The spaces per XML level.</value>
        </member>
        <member name="P:Yarhl.Media.Text.XmlExtension.EscapeSpace">
            <summary>
            Gets the escape space.
            </summary>
            <value>The escape space.</value>
        </member>
        <member name="M:Yarhl.Media.Text.XmlExtension.SetIndentedValue(System.Xml.Linq.XElement,System.String,System.Int32)">
            <summary>
            Sets the concatenated text to this element indented for human-readibility.
            </summary>
            <param name="entry">XML entry to set text.</param>
            <param name="val">Value to indent and set.</param>
            <param name="indent">Indentation level.</param>
        </member>
        <member name="M:Yarhl.Media.Text.XmlExtension.GetIndentedValue(System.Xml.Linq.XElement)">
            <summary>
            Gets the concatenated text to this element removing any indentation.
            </summary>
            <returns>The value without indentation.</returns>
            <param name="entry">XML entry to get text.</param>
        </member>
    </members>
</doc>
